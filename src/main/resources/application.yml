spring:
  # Database
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/dbbase
    username: postgresuser
    password: post
  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    show-sql: true
    #spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
    #spring.jpa.properties.hibernate.default_schema = 선택할스키마이름
  kafka:
    consumer:
#      bootstrap-servers: 192.168.0.65:9092
#      bootstrap-servers: 172.17.0.3:9092
#      bootstrap-servers: 0.0.0.0:9092
      bootstrap-servers: localhost:9092
#      bootstrap-servers: 192.168.54.122:9092
      group-id: 2
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      bootstrap-servers: localhost:9092
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer